{"ast":null,"code":"import React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Table from 'react-native-table';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Detalles = function Detalles(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var plato = route.params.plato;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: {\n        uri: plato.image.url\n      },\n      style: styles.image\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: plato.title\n      }), _jsx(Text, {\n        style: styles.summary,\n        children: plato.summary\n      }), _jsxs(Table, {\n        children: [_jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: \"Gluten free\"\n          }), _jsx(TableCell, {\n            children: plato.glutenFree ? \"Sí\" : \"No\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: \"Health score\"\n          }), _jsx(TableCell, {\n            children: plato.healthScore\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: \"Price per serving\"\n          }), _jsxs(TableCell, {\n            children: [\"$\", plato.pricePerServing]\n          })]\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Volver\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  image: {\n    width: \"100%\",\n    height: 200\n  },\n  content: {\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  summary: {\n    fontSize: 16\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\"\n  },\n  tableCell: {\n    padding: 8\n  }\n});\nexport default Detalles;","map":{"version":3,"names":["React","useState","Table","Detalles","route","navigation","plato","params","styles","container","uri","image","url","content","title","summary","glutenFree","healthScore","pricePerServing","goBack","StyleSheet","create","flex","padding","width","height","fontSize","fontWeight","table","borderCollapse","tableCell"],"sources":["C:/Users/devandroid/Desktop/Challenge-react-native/components/Detalles.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Button } from \"react-native\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport Table from 'react-native-table';\r\n//no funciona la tabla\r\n\r\nconst Detalles = ({ route, navigation }) => {\r\n  const { plato } = route.params;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image source={{ uri: plato.image.url }} style={styles.image} />\r\n      <View style={styles.content}>\r\n        <Text style={styles.title}>{plato.title}</Text>\r\n        <Text style={styles.summary}>{plato.summary}</Text>\r\n\r\n        <Table>\r\n          <TableRow>\r\n            <TableCell>Gluten free</TableCell>\r\n            <TableCell>{plato.glutenFree ? \"Sí\" : \"No\"}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Health score</TableCell>\r\n            <TableCell>{plato.healthScore}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Price per serving</TableCell>\r\n            <TableCell>${plato.pricePerServing}</TableCell>\r\n          </TableRow>\r\n        </Table>\r\n      </View>\r\n      <Button title=\"Volver\" onPress={() => navigation.goBack()} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: 200,\r\n  },\r\n  content: {\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  summary: {\r\n    fontSize: 16,\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    borderCollapse: \"collapse\",\r\n  },\r\n  tableCell: {\r\n    padding: 8,\r\n  },\r\n});\r\n\r\nexport default Detalles;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAGxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAAA;AAGvC,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAA8B;EAAA,IAAxBC,KAAK,QAALA,KAAK;IAAEC,UAAU,QAAVA,UAAU;EACnC,IAAQC,KAAK,GAAKF,KAAK,CAACG,MAAM,CAAtBD,KAAK;EAEb,OACE,MAAC,IAAI;IAAC,KAAK,EAAEE,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,KAAK;MAAC,MAAM,EAAE;QAAEC,GAAG,EAAEJ,KAAK,CAACK,KAAK,CAACC;MAAI,CAAE;MAAC,KAAK,EAAEJ,MAAM,CAACG;IAAM,EAAG,EAChE,MAAC,IAAI;MAAC,KAAK,EAAEH,MAAM,CAACK,OAAQ;MAAA,WAC1B,KAAC,IAAI;QAAC,KAAK,EAAEL,MAAM,CAACM,KAAM;QAAA,UAAER,KAAK,CAACQ;MAAK,EAAQ,EAC/C,KAAC,IAAI;QAAC,KAAK,EAAEN,MAAM,CAACO,OAAQ;QAAA,UAAET,KAAK,CAACS;MAAO,EAAQ,EAEnD,MAAC,KAAK;QAAA,WACJ,MAAC,QAAQ;UAAA,WACP,KAAC,SAAS;YAAA,UAAC;UAAW,EAAY,EAClC,KAAC,SAAS;YAAA,UAAET,KAAK,CAACU,UAAU,GAAG,IAAI,GAAG;UAAI,EAAa;QAAA,EAC9C,EACX,MAAC,QAAQ;UAAA,WACP,KAAC,SAAS;YAAA,UAAC;UAAY,EAAY,EACnC,KAAC,SAAS;YAAA,UAAEV,KAAK,CAACW;UAAW,EAAa;QAAA,EACjC,EACX,MAAC,QAAQ;UAAA,WACP,KAAC,SAAS;YAAA,UAAC;UAAiB,EAAY,EACxC,MAAC,SAAS;YAAA,WAAC,GAAC,EAACX,KAAK,CAACY,eAAe;UAAA,EAAa;QAAA,EACtC;MAAA,EACL;IAAA,EACH,EACP,KAAC,MAAM;MAAC,KAAK,EAAC,QAAQ;MAAC,OAAO,EAAE;QAAA,OAAMb,UAAU,CAACc,MAAM,EAAE;MAAA;IAAC,EAAG;EAAA,EACxD;AAEX,CAAC;AAED,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDZ,KAAK,EAAE;IACLa,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDZ,OAAO,EAAE;IACPU,OAAO,EAAE;EACX,CAAC;EACDT,KAAK,EAAE;IACLY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDZ,OAAO,EAAE;IACPW,QAAQ,EAAE;EACZ,CAAC;EACDE,KAAK,EAAE;IACLJ,KAAK,EAAE,MAAM;IACbK,cAAc,EAAE;EAClB,CAAC;EACDC,SAAS,EAAE;IACTP,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAepB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}