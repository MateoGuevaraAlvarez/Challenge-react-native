{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      setLoading(true);\n      try {\n        var response = yield fakeLogin(email, password);\n        setUser({\n          email: email,\n          response: response\n        });\n      } catch (error) {\n        console.error(\"Error al iniciar sesión:\", error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fakeLogin = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      var token;\n      try {\n        var response = yield fetch(\"http://challenge-react.alkemy.org/?email=\" + email + \"&password=\" + password, {\n          method: \"POST\"\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(data);\n          token = data;\n        } else {\n          console.log(\"Request failed:\", response.status);\n          alert(\"Usuario o contraseña incorrectos\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n      return token;\n    });\n    return function fakeLogin(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setUser(null);\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var signup = function () {\n    var _ref5 = _asyncToGenerator(function* (email, password) {});\n    return function signup(_x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var value = {\n    user: user,\n    loading: loading,\n    login: login,\n    logout: logout,\n    signup: signup\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n}","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","loading","setLoading","login","_ref2","_asyncToGenerator","email","password","response","fakeLogin","error","console","_x","_x2","apply","arguments","_ref3","token","fetch","method","ok","data","json","log","status","alert","_x3","_x4","logout","_ref4","signup","_ref5","_x5","_x6","value","Provider"],"sources":["C:/Users/mateo/OneDrive/Documentos/COLEGIO/challenge/Challenge-react-native/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null); // El estado del usuario\r\n  const [loading, setLoading] = useState(false); // Estado de carga\r\n\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fakeLogin(email, password); // Simulación de inicio de sesión\r\n\r\n      // Si la autenticación es exitosa, actualiza el estado del usuario\r\n      setUser({ email, response });\r\n    } catch (error) {\r\n      // Maneja los errores de inicio de sesión, por ejemplo, muestra un mensaje de error\r\n      console.error(\"Error al iniciar sesión:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fakeLogin = async (email, password) => {\r\n    let token;\r\n    try {\r\n      const response = await fetch(\"http://challenge-react.alkemy.org/?email=\"+ email +\"&password=\" + password, {\r\n        method: \"POST\",\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        token = data;\r\n      } else {\r\n        console.log(\"Request failed:\", response.status);\r\n        alert(\"Usuario o contraseña incorrectos\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return token;\r\n  };\r\n\r\n  const logout = async () => {\r\n    setUser(null);\r\n  };\r\n\r\n  const signup = async (email, password) => {\r\n    // Lógica de registro aquí\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    signup,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n/*La autenticación basada en tokens es un protocolo de autenticación en el que los usuarios verifican su identidad a cambio de un token de acceso único. Los usuarios pueden entonces acceder al sitio web, la aplicación o el recurso durante la vida del token sin tener que volver a introducir sus credenciales.*/\r\n/*El token se genera en el servidor y se envía al cliente. El cliente almacena el token y lo envía al servidor en cada solicitud. El servidor verifica el token y responde con los datos solicitados si el token es válido.*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}