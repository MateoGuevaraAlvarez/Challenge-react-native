{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    alert('Inicio de sesión exitoso');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Inicio de Sesi\\xF3n\"\n    }), _jsx(TextInput, {\n      placeholder: \"Nombre de usuario\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      style: {\n        width: 200,\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 10\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Contrase\\xF1a\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      style: {\n        width: 200,\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 10\n      }\n    }), _jsx(Button, {\n      title: \"Iniciar Sesi\\xF3n\",\n      onPress: handleLogin\n    })]\n  });\n}\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","LoginScreen","navigation","username","setUsername","password","setPassword","handleLogin","alert","flex","justifyContent","alignItems","text","width","height","borderColor","borderWidth","marginBottom"],"sources":["C:/Users/devandroid/Desktop/Nueva carpeta/Challenge-react-native/components/Loginscreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Aquí puedes implementar la lógica real de inicio de sesión.\r\n    // Por ahora, solo mostraremos un mensaje de inicio de sesión exitoso.\r\n    alert('Inicio de sesión exitoso');\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Inicio de Sesión</Text>\r\n      <TextInput\r\n        placeholder=\"Nombre de usuario\"\r\n        value={username}\r\n        onChangeText={(text) => setUsername(text)}\r\n        style={{ width: 200, height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Contraseña\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        style={{ width: 200, height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n      />\r\n      <Button title=\"Iniciar Sesión\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxC,SAASC,WAAW,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAC/B,gBAAgCF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCG,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCK,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;IAGxBC,KAAK,CAAC,0BAA0B,CAAC;EACnC,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAA,WACvE,KAAC,IAAI;MAAA,UAAC;IAAgB,EAAO,EAC7B,KAAC,SAAS;MACR,WAAW,EAAC,mBAAmB;MAC/B,KAAK,EAAER,QAAS;MAChB,YAAY,EAAE,sBAACS,IAAI;QAAA,OAAKR,WAAW,CAACQ,IAAI,CAAC;MAAA,CAAC;MAC1C,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,EAAE;QAAEC,WAAW,EAAE,MAAM;QAAEC,WAAW,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAG;IAAE,EACzF,EACF,KAAC,SAAS;MACR,WAAW,EAAC,eAAY;MACxB,eAAe;MACf,KAAK,EAAEZ,QAAS;MAChB,YAAY,EAAE,sBAACO,IAAI;QAAA,OAAKN,WAAW,CAACM,IAAI,CAAC;MAAA,CAAC;MAC1C,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,EAAE;QAAEC,WAAW,EAAE,MAAM;QAAEC,WAAW,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAG;IAAE,EACzF,EACF,KAAC,MAAM;MAAC,KAAK,EAAC,mBAAgB;MAAC,OAAO,EAAEV;IAAY,EAAG;EAAA,EAClD;AAEX;AAEA,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}