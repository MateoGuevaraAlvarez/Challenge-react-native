{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      setLoading(true);\n      try {\n        var response = yield fakeLogin(email, password);\n        setUser({\n          email: email,\n          response: response\n        });\n      } catch (error) {\n        console.error('Error al iniciar sesión:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fakeLogin = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      try {\n        var response = yield fetch('http://challenge-react.alkemy.org/', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(data);\n          setToken(data);\n          login();\n          navigation.navigate(\"HomePage\");\n        } else {\n          console.log(\"Request failed:\", response.status);\n          alert(\"Usuario o contraseña incorrectos\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n      return token;\n    });\n    return function fakeLogin(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setUser(null);\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var signup = function () {\n    var _ref5 = _asyncToGenerator(function* (email, password) {});\n    return function signup(_x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var value = {\n    user: user,\n    loading: loading,\n    login: login,\n    logout: logout,\n    signup: signup\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n}","map":{"version":3,"names":["createContext","useContext","useState","useEffect","AuthContext","useAuth","AuthProvider","children","user","setUser","loading","setLoading","login","email","password","response","fakeLogin","error","console","fetch","method","headers","body","JSON","stringify","ok","data","json","log","setToken","navigation","navigate","status","alert","token","logout","signup","value"],"sources":["C:/Users/devandroid/Documents/Nueva carpeta/Challenge-react-native/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState,useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\nreturn useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\nconst [user, setUser] = useState(null); // El estado del usuario\r\nconst [loading, setLoading] = useState(false); // Estado de carga\r\n\r\nconst login = async (email, password) => {\r\nsetLoading(true);\r\n\r\ntry {\r\n    const response = await fakeLogin(email, password); // Simulación de inicio de sesión\r\n\r\n    // Si la autenticación es exitosa, actualiza el estado del usuario\r\n    setUser({ email, response });\r\n} catch (error) {\r\n    // Maneja los errores de inicio de sesión, por ejemplo, muestra un mensaje de error\r\n    console.error('Error al iniciar sesión:', error);\r\n} finally {\r\n    setLoading(false);\r\n}\r\n};\r\n\r\nconst fakeLogin = async (email, password) => {\r\n    try {\r\n        const response = await fetch(\r\n            'http://challenge-react.alkemy.org/',\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email: email, password: password }),\r\n          }\r\n        );\r\n  \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(data);\r\n          setToken(data);\r\n          //localStorage.setItem(\"usuario\")\r\n          login();\r\n          navigation.navigate(\"HomePage\");\r\n        } else {\r\n          console.log(\"Request failed:\", response.status);\r\n          alert(\"Usuario o contraseña incorrectos\");\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    return token;\r\n  \r\n    }\r\n\r\n\r\nconst logout = async () => {\r\nsetUser(null);\r\n};\r\n\r\nconst signup = async (email, password) => {\r\n// Lógica de registro aquí\r\n};\r\n\r\nconst value = {\r\nuser,\r\nloading,\r\nlogin,\r\nlogout,\r\nsignup,\r\n};\r\n\r\nreturn <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n\r\n/*La autenticación basada en tokens es un protocolo de autenticación en el que los usuarios verifican su identidad a cambio de un token de acceso único. Los usuarios pueden entonces acceder al sitio web, la aplicación o el recurso durante la vida del token sin tener que volver a introducir sus credenciales.*/\r\n/*El token se genera en el servidor y se envía al cliente. El cliente almacena el token y lo envía al servidor en cada solicitud. El servidor verifica el token y responde con los datos solicitados si el token es válido.*/"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC;AAEtE,IAAMC,WAAW,GAAGJ,aAAa,EAAE;AAEnC,OAAO,SAASK,OAAO,GAAG;EAC1B,OAAOJ,UAAU,CAACG,WAAW,CAAC;AAC9B;AAEA,OAAO,SAASE,YAAY,OAAe;EAAA,IAAZC,QAAQ,QAARA,QAAQ;EACvC,gBAAwBL,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/BM,IAAI;IAAEC,OAAO;EACpB,iBAA8BP,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCQ,OAAO;IAAEC,UAAU;EAE1B,IAAMC,KAAK;IAAA,8BAAG,WAAOC,KAAK,EAAEC,QAAQ,EAAK;MACzCH,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACA,IAAMI,QAAQ,SAASC,SAAS,CAACH,KAAK,EAAEC,QAAQ,CAAC;QAGjDL,OAAO,CAAC;UAAEI,KAAK,EAALA,KAAK;UAAEE,QAAQ,EAARA;QAAS,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;QAEZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACNN,UAAU,CAAC,KAAK,CAAC;MACrB;IACA,CAAC;IAAA,gBAdKC,KAAK;MAAA;IAAA;EAAA,GAcV;EAED,IAAMI,SAAS;IAAA,8BAAG,WAAOH,KAAK,EAAEC,QAAQ,EAAK;MACzC,IAAI;QACA,IAAMC,QAAQ,SAASI,KAAK,CACxB,oCAAoC,EACtC;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEX,KAAK,EAAEA,KAAK;YAAEC,QAAQ,EAAEA;UAAS,CAAC;QAC3D,CAAC,CACF;QAED,IAAIC,QAAQ,CAACU,EAAE,EAAE;UACf,IAAMC,IAAI,SAASX,QAAQ,CAACY,IAAI,EAAE;UAClCT,OAAO,CAACU,GAAG,CAACF,IAAI,CAAC;UACjBG,QAAQ,CAACH,IAAI,CAAC;UAEdd,KAAK,EAAE;UACPkB,UAAU,CAACC,QAAQ,CAAC,UAAU,CAAC;QACjC,CAAC,MAAM;UACLb,OAAO,CAACU,GAAG,CAAC,iBAAiB,EAAEb,QAAQ,CAACiB,MAAM,CAAC;UAC/CC,KAAK,CAAC,kCAAkC,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;MACF,OAAOiB,KAAK;IAEZ,CAAC;IAAA,gBA7BClB,SAAS;MAAA;IAAA;EAAA,GA6BV;EAGL,IAAMmB,MAAM;IAAA,8BAAG,aAAY;MAC3B1B,OAAO,CAAC,IAAI,CAAC;IACb,CAAC;IAAA,gBAFK0B,MAAM;MAAA;IAAA;EAAA,GAEX;EAED,IAAMC,MAAM;IAAA,8BAAG,WAAOvB,KAAK,EAAEC,QAAQ,EAAK,CAE1C,CAAC;IAAA,gBAFKsB,MAAM;MAAA;IAAA;EAAA,GAEX;EAED,IAAMC,KAAK,GAAG;IACd7B,IAAI,EAAJA,IAAI;IACJE,OAAO,EAAPA,OAAO;IACPE,KAAK,EAALA,KAAK;IACLuB,MAAM,EAANA,MAAM;IACNC,MAAM,EAANA;EACA,CAAC;EAED,OAAO,KAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,KAAM;IAAA,UAAE9B;EAAQ,EAAwB;AAC5E"},"metadata":{},"sourceType":"module","externalDependencies":[]}