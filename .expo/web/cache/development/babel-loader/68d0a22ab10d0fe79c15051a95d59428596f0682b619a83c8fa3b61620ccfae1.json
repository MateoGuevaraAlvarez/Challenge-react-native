{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      setLoading(true);\n      try {\n        var response = yield fakeLogin(email, password);\n        var token = response.token;\n        setUser({\n          email: email,\n          token: token\n        });\n      } catch (error) {\n        console.error('Error al iniciar sesión:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function fakeLogin(email, password) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        if (email === 'challenge@alkemy.org' && password === 'react') {\n          var token = Math.random().toString(36).substring(7);\n          resolve({\n            token: token\n          });\n        }\n        reject(new Error('Usuario o contraseña incorrectos'));\n      }, 1000);\n    });\n  }\n  ;\n  var logout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setUser(null);\n    });\n    return function logout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var signup = function () {\n    var _ref4 = _asyncToGenerator(function* (email, password) {});\n    return function signup(_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var value = {\n    user: user,\n    loading: loading,\n    login: login,\n    logout: logout,\n    signup: signup\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n}","map":{"version":3,"names":["createContext","useContext","useState","AuthContext","useAuth","AuthProvider","children","user","setUser","loading","setLoading","login","email","password","response","fakeLogin","token","error","console","Promise","resolve","reject","setTimeout","Math","random","toString","substring","Error","logout","signup","value"],"sources":["C:/Users/devandroid/Desktop/Nueva carpeta/Challenge-react-native/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\nreturn useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\nconst [user, setUser] = useState(null); // El estado del usuario\r\nconst [loading, setLoading] = useState(false); // Estado de carga\r\n\r\nconst login = async (email, password) => {\r\nsetLoading(true);\r\n\r\ntry {\r\n    const response = await fakeLogin(email, password); // Simulación de inicio de sesión\r\n    const token = response.token;\r\n\r\n    // Si la autenticación es exitosa, actualiza el estado del usuario\r\n    setUser({ email, token });\r\n} catch (error) {\r\n    // Maneja los errores de inicio de sesión, por ejemplo, muestra un mensaje de error\r\n    console.error('Error al iniciar sesión:', error);\r\n} finally {\r\n    setLoading(false);\r\n}\r\n};\r\n\r\nfunction fakeLogin(email, password) {\r\n// Simulación de inicio de sesión\r\nreturn new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n    if (email === 'challenge@alkemy.org' && password === 'react') {\r\n\r\n        // Genera un token aleatorio como si fuera un JWT\r\n        const token = Math.random().toString(36).substring(7);\r\n        resolve({ token });\r\n        /* el token es un string aleatorio que se genera para identificar al usuario */\r\n        /* en una aplicación real, el token se genera en el servidor y se envía al cliente */\r\n        /* para este ejemplo, el token se genera en el cliente */\r\n\r\n    }\r\n\r\n    reject(new Error('Usuario o contraseña incorrectos'));\r\n    }, 1000);\r\n})\r\n};\r\n\r\n\r\nconst logout = async () => {\r\nsetUser(null);\r\n};\r\n\r\nconst signup = async (email, password) => {\r\n// Lógica de registro aquí\r\n};\r\n\r\nconst value = {\r\nuser,\r\nloading,\r\nlogin,\r\nlogout,\r\nsignup,\r\n};\r\n\r\nreturn <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n\r\n/*La autenticación basada en tokens es un protocolo de autenticación en el que los usuarios verifican su identidad a cambio de un token de acceso único. Los usuarios pueden entonces acceder al sitio web, la aplicación o el recurso durante la vida del token sin tener que volver a introducir sus credenciales.*/\r\n/*El token se genera en el servidor y se envía al cliente. El cliente almacena el token y lo envía al servidor en cada solicitud. El servidor verifica el token y responde con los datos solicitados si el token es válido.*/"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5D,IAAMC,WAAW,GAAGH,aAAa,EAAE;AAEnC,OAAO,SAASI,OAAO,GAAG;EAC1B,OAAOH,UAAU,CAACE,WAAW,CAAC;AAC9B;AAEA,OAAO,SAASE,YAAY,OAAe;EAAA,IAAZC,QAAQ,QAARA,QAAQ;EACvC,gBAAwBJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/BK,IAAI;IAAEC,OAAO;EACpB,iBAA8BN,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCO,OAAO;IAAEC,UAAU;EAE1B,IAAMC,KAAK;IAAA,8BAAG,WAAOC,KAAK,EAAEC,QAAQ,EAAK;MACzCH,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACA,IAAMI,QAAQ,SAASC,SAAS,CAACH,KAAK,EAAEC,QAAQ,CAAC;QACjD,IAAMG,KAAK,GAAGF,QAAQ,CAACE,KAAK;QAG5BR,OAAO,CAAC;UAAEI,KAAK,EAALA,KAAK;UAAEI,KAAK,EAALA;QAAM,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QAEZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACNP,UAAU,CAAC,KAAK,CAAC;MACrB;IACA,CAAC;IAAA,gBAfKC,KAAK;MAAA;IAAA;EAAA,GAeV;EAED,SAASI,SAAS,CAACH,KAAK,EAAEC,QAAQ,EAAE;IAEpC,OAAO,IAAIM,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MACpCC,UAAU,CAAC,YAAM;QACjB,IAAIV,KAAK,KAAK,sBAAsB,IAAIC,QAAQ,KAAK,OAAO,EAAE;UAG1D,IAAMG,KAAK,GAAGO,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;UACrDN,OAAO,CAAC;YAAEJ,KAAK,EAALA;UAAM,CAAC,CAAC;QAKtB;QAEAK,MAAM,CAAC,IAAIM,KAAK,CAAC,kCAAkC,CAAC,CAAC;MACrD,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACF;EAAC;EAGD,IAAMC,MAAM;IAAA,8BAAG,aAAY;MAC3BpB,OAAO,CAAC,IAAI,CAAC;IACb,CAAC;IAAA,gBAFKoB,MAAM;MAAA;IAAA;EAAA,GAEX;EAED,IAAMC,MAAM;IAAA,8BAAG,WAAOjB,KAAK,EAAEC,QAAQ,EAAK,CAE1C,CAAC;IAAA,gBAFKgB,MAAM;MAAA;IAAA;EAAA,GAEX;EAED,IAAMC,KAAK,GAAG;IACdvB,IAAI,EAAJA,IAAI;IACJE,OAAO,EAAPA,OAAO;IACPE,KAAK,EAALA,KAAK;IACLiB,MAAM,EAANA,MAAM;IACNC,MAAM,EAANA;EACA,CAAC;EAED,OAAO,KAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,KAAM;IAAA,UAAExB;EAAQ,EAAwB;AAC5E"},"metadata":{},"sourceType":"module","externalDependencies":[]}