{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    alert('Inicio de sesión exitoso');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#f2f2f2'\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        color: '#333'\n      },\n      children: \"Iniciar Sesi\\xF3n\"\n    }), _jsx(TextInput, {\n      placeholder: \"Nombre de usuario\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      style: {\n        width: 250,\n        height: 40,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingLeft: 10,\n        marginBottom: 15,\n        backgroundColor: '#fff'\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Contrase\\xF1a\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      style: {\n        width: 250,\n        height: 40,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingLeft: 10,\n        marginBottom: 15,\n        backgroundColor: '#fff'\n      }\n    }), _jsx(Button, {\n      title: \"Iniciar Sesi\\xF3n\",\n      onPress: handleLogin,\n      color: \"#007AFF\"\n    })]\n  });\n}\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","LoginScreen","navigation","username","setUsername","password","setPassword","handleLogin","alert","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","color","text","width","height","borderColor","borderWidth","borderRadius","paddingLeft"],"sources":["C:/Users/devandroid/Desktop/Nueva carpeta/Challenge-react-native/components/LoginScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Implementa aquí la lógica real de inicio de sesión.\r\n    // Por ahora, solo mostraremos un mensaje de inicio de sesión exitoso.\r\n    alert('Inicio de sesión exitoso');\r\n  };\r\n\r\n  return (\r\n    <View style={{\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: '#f2f2f2', // Color de fondo\r\n    }}>\r\n      <Text style={{\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        color: '#333', // Color del título\r\n      }}>Iniciar Sesión</Text>\r\n      <TextInput\r\n        placeholder=\"Nombre de usuario\"\r\n        value={username}\r\n        onChangeText={(text) => setUsername(text)}\r\n        style={{\r\n          width: 250,\r\n          height: 40,\r\n          borderColor: '#ccc',\r\n          borderWidth: 1,\r\n          borderRadius: 5,\r\n          paddingLeft: 10,\r\n          marginBottom: 15,\r\n          backgroundColor: '#fff', // Color de fondo del campo de entrada\r\n        }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Contraseña\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        style={{\r\n          width: 250,\r\n          height: 40,\r\n          borderColor: '#ccc',\r\n          borderWidth: 1,\r\n          borderRadius: 5,\r\n          paddingLeft: 10,\r\n          marginBottom: 15,\r\n          backgroundColor: '#fff', // Color de fondo del campo de entrada\r\n        }}\r\n      />\r\n      <Button\r\n        title=\"Iniciar Sesión\"\r\n        onPress={handleLogin}\r\n        color=\"#007AFF\" // Color del botón\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxC,SAASC,WAAW,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAC/B,gBAAgCF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCG,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCK,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;IAGxBC,KAAK,CAAC,0BAA0B,CAAC;EACnC,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MACXC,IAAI,EAAE,CAAC;MACPC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,eAAe,EAAE;IACnB,CAAE;IAAA,WACA,KAAC,IAAI;MAAC,KAAK,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE,MAAM;QAClBC,YAAY,EAAE,EAAE;QAChBC,KAAK,EAAE;MACT,CAAE;MAAA,UAAC;IAAc,EAAO,EACxB,KAAC,SAAS;MACR,WAAW,EAAC,mBAAmB;MAC/B,KAAK,EAAEb,QAAS;MAChB,YAAY,EAAE,sBAACc,IAAI;QAAA,OAAKb,WAAW,CAACa,IAAI,CAAC;MAAA,CAAC;MAC1C,KAAK,EAAE;QACLC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,MAAM;QACnBC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,WAAW,EAAE,EAAE;QACfR,YAAY,EAAE,EAAE;QAChBH,eAAe,EAAE;MACnB;IAAE,EACF,EACF,KAAC,SAAS;MACR,WAAW,EAAC,eAAY;MACxB,eAAe;MACf,KAAK,EAAEP,QAAS;MAChB,YAAY,EAAE,sBAACY,IAAI;QAAA,OAAKX,WAAW,CAACW,IAAI,CAAC;MAAA,CAAC;MAC1C,KAAK,EAAE;QACLC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,MAAM;QACnBC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,WAAW,EAAE,EAAE;QACfR,YAAY,EAAE,EAAE;QAChBH,eAAe,EAAE;MACnB;IAAE,EACF,EACF,KAAC,MAAM;MACL,KAAK,EAAC,mBAAgB;MACtB,OAAO,EAAEL,WAAY;MACrB,KAAK,EAAC;IAAS,EACf;EAAA,EACG;AAEX;AAEA,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}