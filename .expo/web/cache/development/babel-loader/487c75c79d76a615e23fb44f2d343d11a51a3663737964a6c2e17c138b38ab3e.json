{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Table, Row, Cell } from \"react-native-table-component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Detalles = function Detalles(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var plato = route.params.plato;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: {\n        uri: plato.image.url\n      },\n      style: styles.image\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: plato.title\n      }), _jsx(Text, {\n        style: styles.summary,\n        children: plato.summary\n      }), _jsx(View, {\n        style: styles.tableContainer,\n        children: _jsxs(Table, {\n          children: [_jsx(Row, {\n            data: [\"Gluten free\", plato.glutenFree ? \"Sí\" : \"No\"],\n            style: styles.row,\n            textStyle: styles.cellText\n          }), _jsx(Row, {\n            data: [\"Health score\", plato.healthScore],\n            style: styles.row,\n            textStyle: styles.cellText\n          }), _jsx(Row, {\n            data: [\"Price per serving\", `$${plato.pricePerServing}`],\n            style: styles.row,\n            textStyle: styles.cellText\n          })]\n        })\n      })]\n    }), _jsx(Button, {\n      title: \"Volver\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      style: styles.button\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginBottom: 16\n  },\n  content: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 8\n  },\n  summary: {\n    fontSize: 16,\n    marginBottom: 16,\n    textAlign: \"center\"\n  },\n  tableContainer: {\n    marginTop: 16,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 4,\n    padding: 8\n  },\n  row: {\n    height: 40\n  },\n  cellText: {\n    textAlign: \"center\"\n  },\n  button: {\n    marginTop: 16,\n    width: 200,\n    height: 40\n  }\n});\nexport default Detalles;","map":{"version":3,"names":["React","View","Text","Button","Image","StyleSheet","Table","Row","Cell","jsx","_jsx","jsxs","_jsxs","Detalles","_ref","route","navigation","plato","params","style","styles","container","children","source","uri","image","url","content","title","summary","tableContainer","data","glutenFree","row","textStyle","cellText","healthScore","pricePerServing","onPress","goBack","button","create","flex","padding","alignItems","justifyContent","width","height","marginBottom","fontSize","fontWeight","textAlign","marginTop","borderWidth","borderColor","borderRadius"],"sources":["C:/Users/devandroid/Desktop/Challenge-react-native/components/Detalles.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, Button, Image, StyleSheet } from \"react-native\";\r\nimport { Table, Row, Cell } from \"react-native-table-component\";\r\n\r\nconst Detalles = ({ route, navigation }) => {\r\n  const { plato } = route.params;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image source={{ uri: plato.image.url }} style={styles.image} />\r\n      <View style={styles.content}>\r\n        <Text style={styles.title}>{plato.title}</Text>\r\n        <Text style={styles.summary}>{plato.summary}</Text>\r\n        <View style={styles.tableContainer}>\r\n          <Table>\r\n            <Row data={[\"Gluten free\", plato.glutenFree ? \"Sí\" : \"No\"]} style={styles.row} textStyle={styles.cellText} />\r\n            <Row data={[\"Health score\", plato.healthScore]} style={styles.row} textStyle={styles.cellText} />\r\n            <Row data={[\"Price per serving\", `$${plato.pricePerServing}`]} style={styles.row} textStyle={styles.cellText} />\r\n          </Table>\r\n        </View>\r\n      </View>\r\n      <Button title=\"Volver\" onPress={() => navigation.goBack()} style={styles.button} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 200,\r\n    marginBottom: 16,\r\n  },\r\n  content: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 8,\r\n  },\r\n  summary: {\r\n    fontSize: 16,\r\n    marginBottom: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  tableContainer: {\r\n    marginTop: 16,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 4,\r\n    padding: 8,\r\n  },\r\n  row: {\r\n    height: 40,\r\n  },\r\n  cellText: {\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    marginTop: 16,\r\n    width: 200,\r\n    height: 40,\r\n  },\r\n});\r\n\r\nexport default Detalles;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,KAAK,EAAEC,GAAG,EAAEC,IAAI,QAAQ,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACnC,IAAQC,KAAK,GAAKF,KAAK,CAACG,MAAM,CAAtBD,KAAK;EAEb,OACEL,KAAA,CAACX,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BZ,IAAA,CAACN,KAAK;MAACmB,MAAM,EAAE;QAAEC,GAAG,EAAEP,KAAK,CAACQ,KAAK,CAACC;MAAI,CAAE;MAACP,KAAK,EAAEC,MAAM,CAACK;IAAM,CAAE,CAAC,EAChEb,KAAA,CAACX,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACO,OAAQ;MAAAL,QAAA,GAC1BZ,IAAA,CAACR,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACQ,KAAM;QAAAN,QAAA,EAAEL,KAAK,CAACW;MAAK,CAAO,CAAC,EAC/ClB,IAAA,CAACR,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACS,OAAQ;QAAAP,QAAA,EAAEL,KAAK,CAACY;MAAO,CAAO,CAAC,EACnDnB,IAAA,CAACT,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACU,cAAe;QAAAR,QAAA,EACjCV,KAAA,CAACN,KAAK;UAAAgB,QAAA,GACJZ,IAAA,CAACH,GAAG;YAACwB,IAAI,EAAE,CAAC,aAAa,EAAEd,KAAK,CAACe,UAAU,GAAG,IAAI,GAAG,IAAI,CAAE;YAACb,KAAK,EAAEC,MAAM,CAACa,GAAI;YAACC,SAAS,EAAEd,MAAM,CAACe;UAAS,CAAE,CAAC,EAC7GzB,IAAA,CAACH,GAAG;YAACwB,IAAI,EAAE,CAAC,cAAc,EAAEd,KAAK,CAACmB,WAAW,CAAE;YAACjB,KAAK,EAAEC,MAAM,CAACa,GAAI;YAACC,SAAS,EAAEd,MAAM,CAACe;UAAS,CAAE,CAAC,EACjGzB,IAAA,CAACH,GAAG;YAACwB,IAAI,EAAE,CAAC,mBAAmB,EAAG,IAAGd,KAAK,CAACoB,eAAgB,EAAC,CAAE;YAAClB,KAAK,EAAEC,MAAM,CAACa,GAAI;YAACC,SAAS,EAAEd,MAAM,CAACe;UAAS,CAAE,CAAC;QAAA,CAC3G;MAAC,CACJ,CAAC;IAAA,CACH,CAAC,EACPzB,IAAA,CAACP,MAAM;MAACyB,KAAK,EAAC,QAAQ;MAACU,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMtB,UAAU,CAACuB,MAAM,CAAC,CAAC;MAAA,CAAC;MAACpB,KAAK,EAAEC,MAAM,CAACoB;IAAO,CAAE,CAAC;EAAA,CAC/E,CAAC;AAEX,CAAC;AAED,IAAMpB,MAAM,GAAGf,UAAU,CAACoC,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDpB,KAAK,EAAE;IACLqB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE;EAChB,CAAC;EACDrB,OAAO,EAAE;IACPiB,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDjB,KAAK,EAAE;IACLqB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBF,YAAY,EAAE;EAChB,CAAC;EACDnB,OAAO,EAAE;IACPoB,QAAQ,EAAE,EAAE;IACZD,YAAY,EAAE,EAAE;IAChBG,SAAS,EAAE;EACb,CAAC;EACDrB,cAAc,EAAE;IACdsB,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfZ,OAAO,EAAE;EACX,CAAC;EACDV,GAAG,EAAE;IACHc,MAAM,EAAE;EACV,CAAC;EACDZ,QAAQ,EAAE;IACRgB,SAAS,EAAE;EACb,CAAC;EACDX,MAAM,EAAE;IACNY,SAAS,EAAE,EAAE;IACbN,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAelC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}